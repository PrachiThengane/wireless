<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/LICENSE-M1.txt
 *
 * @category   AW
 * @package    AW_Points
 * @copyright  Copyright (c) 2008-2011 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/LICENSE-M1.txt
 */
?>
<?php
$summaryForCustomer = $this->getSummaryForCustomer();
$textForPoints = Mage::helper('points/config')->getPointUnitName();
?>
<div class="payment-methods">
<script type="text/javascript">
//<![CDATA[
 var payment = new Payment('checkout-payment-method-load', '<?php echo $this->getUrl('checkout/onepage/savePayment') ?>');
//]]>
</script>
<dl class="sp-methods" id="checkout-payment-method-load">
<?php if ($this->pointsSectionAvailable()): ?>
<dt>
<input type="checkbox" name="payment[use_points]" id="use_points" checked="checked"  style="display:none;"/>
<!--<label for="use_points"><?php echo $this->__('Use my %s', $textForPoints) ?></label>-->
</dt>
<dt>
<input type="text" name="payment[points_amount]" id="points_amount" onchange="pointsAmountChanged()" style="display:none"/>
<label for="points_amount"><?php echo Mage::helper('points')->__('You have  %s %s .(%s)', $summaryForCustomer->getPoints(), $textForPoints, $this->getMoneyForPoints()) ?></label>
<br />
<label for="points_amount"><?php echo Mage::helper('points')->__('This time you will use  %s %s.', $summaryForCustomer->getPoints(), $textForPoints) ?></label>
</dt>
<?php endif; ?>

<?php foreach ($this->getMethods() as $_method): $_code = $_method->getCode() ?>
<dt>
<?php if (sizeof($this->getMethods()) > 1): ?>
<input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" title="<?php echo $this->htmlEscape($_method->getTitle()) ?>" onclick="payment.switchMethod('<?php echo $_code ?>')"<?php if ($this->getSelectedMethodCode() == $_code): ?> checked="checked"<?php endif; ?> class="radio" />
<?php else: ?>
<span class="no-display"><input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" checked="checked" class="radio" /></span>
<?php endif; ?>
<label for="p_method_<?php echo $_code ?>"><?php echo $this->getMethodTitle($_method) ?> <?php echo $this->getMethodLabelAfterHtml($_method) ?></label>
</dt>
<?php if ($html = $this->getPaymentMethodFormHtml($_method)): ?>
<dd id="container_payment_method_<?php echo $_code; ?>" class="payment-method">
<?php echo $html; ?>
</dd>
<?php endif; ?>
<?php endforeach; ?>
</dl>
<?php echo $this->getChildChildHtml('additional'); ?>
<script type="text/javascript">
//<![CDATA[
<?php echo $this->getChildChildHtml('scripts'); ?>
payment.init();
//]]>
</script>

<?php if ($this->pointsSectionAvailable()): ?>
<script type="text/javascript">
//<![CDATA[
var customerPoints = <?php echo $summaryForCustomer->getPoints() ?>;
var neededPoints = <?php echo $this->getNeededPoints() ?>;

$('use_points').disabled = $('points_amount').disabled = false;
$('points_amount').value = neededPoints;
if ($('points_amount').value > customerPoints) $('points_amount').value = customerPoints;

var pointsAmountChanged = function()
{
if (isNaN($('points_amount').value)) $('points_amount').value = 0;
$('points_amount').value = Math.abs($('points_amount').value).toFixed(0);
if ($('points_amount').value > neededPoints) $('points_amount').value = neededPoints;
if ($('points_amount').value > customerPoints) $('points_amount').value = customerPoints;
}
Event.observe(window, 'load', function()
{
//alert('load');
if (payment) {
//alert('PayMent');
payment.copySave = payment.save;
payment.anyPaymentMethodChecked = function()
{
//alert('save fucntion');
var methods = document.getElementsByName('payment[method]');
for (var i=0; i<methods.length; i++) {
if (methods[i].checked) {
// alert(methods[i] + 'checked');
return true;
}
}
return false;
}

payment.save = function()
{
   
var quoteBaseGrandTotalInPoints = <?php echo $this->getBaseGrandTotalInPoints() ?>;
alert(quoteBaseGrandTotalInPoints);
if (quoteBaseGrandTotalInPoints > $('points_amount').value && !payment.anyPaymentMethodChecked())
{
alert(Translator.translate('Please specify payment method.'));
return false;
}
else
{
return payment.copySave();
}
}
}
});
//]]>
</script>
<?php endif; ?>
<script type="text/javascript">
//<![CDATA[
function toggleToolTip(event){
if($('payment-tool-tip')){
$('payment-tool-tip').setStyle({
top: (Event.pointerY(event)-560)+'px'//,
//left: (Event.pointerX(event)+100)+'px'
})
$('payment-tool-tip').toggle();
}
Event.stop(event);
}
if($('payment-tool-tip-close')){
Event.observe($('payment-tool-tip-close'), 'click', toggleToolTip);
}
$$('#checkout-payment-method-load dt input').invoke('observe', 'click', function(e) {
var element = e.element();
var name = 'payment_form_' + element.getValue();
payment.currentMethod = element.getValue();
/* Hide all other forms */
$$('dd.payment-method').invoke('hide');
if(element.checked) {
payment.switchMethod(payment.currentMethod);
var form = $(name);
var container = $('container_payment_method_' + element.getValue());
if(element !== null && container !== null) {
	if(element.getValue() == 'commWeb'){
		jQuery('#commWeb_expiration').removeAttr('disabled');
		jQuery('#commWeb_expiration_yr').removeAttr('disabled');
		jQuery('#commWeb_cc_cid').removeAttr('disabled');
		jQuery('#commWeb_cc_number').removeAttr('disabled');
		jQuery('#commWeb_cc_type').removeAttr('disabled');
	}
	if(element.getValue() == 'verisign'){
		jQuery('#verisign_expiration').removeAttr('disabled');
		jQuery('#verisign_expiration_yr').removeAttr('disabled');
		jQuery('#verisign_cc_cid').removeAttr('disabled');
		jQuery('#verisign_cc_number').removeAttr('disabled');
		jQuery('#verisign_cc_type').removeAttr('disabled');
	}
container.show();
$(name).show();
}
}
});
payment.switchMethod(payment.currentMethod); 

//]]>
</script>
</div>

