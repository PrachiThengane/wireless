<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php if ($this->isReadonly()):?>
<?php $_readonly = ' disabled="disabled" ';?>
<?php else: ?>
<?php $_readonly = '';?>
<?php endif; ?>
<div class="entry-edit">
    <div class="entry-edit-head">
        <h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('catalog')->__('Inventory') ?></h4>
    </div>
    <fieldset>

        <legend><?php echo Mage::helper('catalog')->__('Inventory') ?></legend>
        <table cellspacing="0" class="form-list" id="table_cataloginventory">       
        
		<?php if ($this->getProduct()->getTypeId()!='configurable'): ?>
		<tr>
            <td class="label"><label for="inventory_qty"><?php echo Mage::helper('catalog')->__('Qty') ?> <span class="required">*</span></label></td>
            <td class="value">
                <?php if (!$_readonly):?>
                <input type="hidden" id="original_inventory_qty" name="<?php echo $this->getFieldSuffix() ?>[stock_data][original_inventory_qty]" value="<?php echo $this->getFieldValue('qty')*1 ?>"/>
                <?php endif;?>
                <input type="text" class="input-text required-entry validate-number" id="inventory_qty" name="<?php echo $this->getFieldSuffix() ?>[stock_data][qty]" value="<?php echo $this->getFieldValue('qty')*1 ?>" <?php echo $_readonly;?>/>
            </td>
            <td class="value scope-label"><?php echo Mage::helper('catalog')->__('[GLOBAL]') ?></td>
        </tr>
		<?php endif; ?>
		
		<tr>
			<td class="label"><label for="minimum_qty"><?php echo Mage::helper('catalog')->__('Target') ?> <span class="required">*</span></label></td>
            <td class="value">
                <input type="text" class="input-text required-entry validate-number" id="minimum_qty" name="minimum_qty" value="<?php echo $this->getMinimumQty(); ?>" />
            </td>
        </tr>
		
		<tr>
			<?php if ($this->getProduct()->getTypeId()=='virtual'): ?>
				<td class="label"><label for="maximum_qty"><?php echo Mage::helper('catalog')->__('Maximum Coupons/Customer') ?> <span class="required">*</span></label></td>
			<?php else: ?>
				<td class="label"><label for="maximum_qty"><?php echo Mage::helper('catalog')->__('Maximum Products/Customer') ?> <span class="required">*</span></label></td>
			<?php endif; ?>
            <td class="value">
                <input type="text" class="input-text required-entry validate-number" id="maximum_qty" name="maximum_qty" value="<?php echo $this->getMaximumQty(); ?>" />
            </td>
        </tr>
     
        <tr>
            <td class="label"><label for="inventory_stock_availability"><?php echo Mage::helper('catalog')->__('Stock Availability') ?></label></td>
            <td class="value"><select id="inventory_stock_availability" name="<?php echo $this->getFieldSuffix() ?>[stock_data][is_in_stock]" class="select" <?php echo $_readonly;?>>
            <?php foreach ($this->getStockOption() as $option): ?>
                <?php $_selected = ($option['value'] == $this->getFieldValue('is_in_stock')) ? 'selected="selected"' : '' ?>
                <option value="<?php echo $option['value'] ?>" <?php echo $_selected ?>><?php echo $option['label'] ?></option>
            <?php endforeach; ?>
            </select>
            </td>
            <td class="value scope-label"><?php echo Mage::helper('catalog')->__('[GLOBAL]') ?></td>
        </tr>
		<input type="hidden" class="input-text required-entry validate-number" id="inventory_manage_stock" name="<?php echo $this->getFieldSuffix() ?>[stock_data][manage_stock]" value="1" />
        </table>
    <script type="text/javascript">
    //<![CDATA[
    var cataloginventoryNotManagestockFields = {
        inventory_min_sale_qty: true,
        inventory_max_sale_qty: true
    };
    function changeManageStockOption()
    {
        $$('#table_cataloginventory tr').each(manageStockEach);
        return true;
    }
    function manageStockEach(el)
    {
        if ($('inventory_use_config_manage_stock').checked) {
            var manageStock = $('inventory_manage_stock_default').value;
        }
        else {
            var manageStock = $('inventory_manage_stock').value;
        }
        if (el == $('inventory_manage_stock').up(1)) {
            return;
        }
        for(field in cataloginventoryNotManagestockFields) {
            if ($(field) && ($(field).up(1) == el)) {
                return;
            }
        }
        if (manageStock == 1) {
            el.show();
        }
        else {
            el.hide();
        }
        return;
    }
    Event.observe($('inventory_manage_stock'), 'change', changeManageStockOption);
    Event.observe($('inventory_use_config_manage_stock'), 'change', changeManageStockOption);
    changeManageStockOption();

    function applyEnableQtyIncrements() {
        if ($('inventory_use_config_enable_qty_increments').checked) {
            var enableQtyIncrements = $('inventory_enable_qty_increments_default').value;
        }
        else {
            var enableQtyIncrements = $('inventory_enable_qty_increments').value;
        }
        if (enableQtyIncrements == 1) {
            $('inventory_qty_increments').up('tr').show();
        } else {
            $('inventory_qty_increments').up('tr').hide();
        }
    }
    Event.observe($('inventory_enable_qty_increments'), 'change', applyEnableQtyIncrements);
    Event.observe($('inventory_use_config_enable_qty_increments'), 'change', applyEnableQtyIncrements);
    applyEnableQtyIncrements();
    //]]>
    </script>
    </fieldset>
</div>
